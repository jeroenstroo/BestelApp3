@model BestelApp2.Models.Bestellingen

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Bestellingen</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.BestellingsNaam)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BestellingsNaam)
            @Html.ValidationMessageFor(model => model.BestellingsNaam)
        </div>

@*        <div class="editor-label">
            @Html.LabelFor(model => model.Datum)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Datum)
            @Html.ValidationMessageFor(model => model.Datum)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.UserId, "UserProfile")
        </div>
        <div class="editor-field">
            @Html.DropDownList("UserId")
            @Html.ValidationMessageFor(model => model.UserId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsTemplate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsTemplate)
            @Html.ValidationMessageFor(model => model.IsTemplate)
        </div>

        <div class="editor-field">
    <table>
        <tr>
            @{
                int cnt = 0;
                List<BestelApp2.Models.BestellingsProducten> productenTemp = ViewBag.Producten;
                //Ordenen op categorie
                List<BestelApp2.Models.BestellingsProducten> producten = productenTemp.OrderBy(product => product.CategorieNaam).ToList();
                
                string categorieNaamOud = "";
                
                foreach (var product in producten) {

                    if (product.CategorieNaam != categorieNaamOud) //Categorie maar 1 keer op het scherm zetten
                    {
                        categorieNaamOud = product.CategorieNaam;
                        @: </tr> <tr> 
                        @: <th>@product.CategorieNaam</th>
                        @: </tr> <tr> 
                    }
                    
                    if (cnt++ % 4 == 0) 
                    {
                        @:  </tr> <tr> 
                    }
                    @: <td> 
                        <input type="checkbox" 
                               name="selectedProducten" 
                               value="@product.ProductId" 
                               @(Html.Raw(product.Assigned ? "checked=\"checked\"" : "")) /> 
                                @product.ProductNaam
                    @:</td>

                }
                @: </tr>
            }
    </table>
</div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Opmerkingen)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Opmerkingen)
            @Html.ValidationMessageFor(model => model.Opmerkingen)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
